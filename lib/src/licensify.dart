// SPDX-FileCopyrightText: 2025 Karim "nogipx" Mamatkazin <nogipx@gmail.com>
//
// SPDX-License-Identifier: LGPL-3.0-or-later

part of 'crypto/_index.dart';

/// üîê –ì–ª–∞–≤–Ω—ã–π —Ñ–∞—Å–∞–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–∏—Ü–µ–Ω–∑–∏—è–º–∏ Licensify
///
/// –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –∏ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
/// —Å –ª–∏—Ü–µ–Ω–∑–∏—è–º–∏, —Å–∫—Ä—ã–≤–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã.
///
/// üõ°Ô∏è –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π
/// –æ—á–∏—Å—Ç–∫–æ–π –∫–ª—é—á–µ–π –≤ –ø–∞–º—è—Ç–∏ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
///
/// –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
/// - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∫–ª—é—á–µ–π
/// - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ª–∏—Ü–µ–Ω–∑–∏–π
/// - –í–∞–ª–∏–¥–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏–π
/// - –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
/// - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –∫–ª—é—á–µ–π
abstract interface class Licensify {
  Licensify._(); // –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã

  // ========================================
  // üîë –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–õ–Æ–ß–ê–ú–ò
  // ========================================

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –ø–∞—Ä—É –∫–ª—é—á–µ–π Ed25519 –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –ª–∏—Ü–µ–Ω–∑–∏–π
  ///
  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –∏ –ø—É–±–ª–∏—á–Ω—ã–º –∫–ª—é—á–æ–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
  /// –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
  ///
  /// –ü—Ä–∏–º–µ—Ä:
  /// ```dart
  /// final keys = await Licensify.generateSigningKeys();
  /// print('–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: ${keys.privateKeyBytes.length} –±–∞–π—Ç');
  /// print('–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á: ${keys.publicKeyBytes.length} –±–∞–π—Ç');
  /// // –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–∑–≤–∞—Ç—å keys.dispose() –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!
  /// ```
  static Future<LicensifyKeyPair> generateSigningKeys() async {
    return await LicensifyKey.generatePublicKeyPair();
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–π –∫–ª—é—á XChaCha20 –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  ///
  /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã—Ö PASETO v4.local —Ç–æ–∫–µ–Ω–æ–≤.
  ///
  /// –ü—Ä–∏–º–µ—Ä:
  /// ```dart
  /// final encryptionKey = Licensify.generateEncryptionKey();
  /// print('–ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ${encryptionKey.keyLength} –±–∞–π—Ç');
  /// // –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–∑–≤–∞—Ç—å encryptionKey.dispose() –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!
  /// ```
  static LicensifySymmetricKey generateEncryptionKey() {
    return LicensifyKey.generateLocalKey();
  }

  /// –°–æ–∑–¥–∞–µ—Ç –ø–∞—Ä—É –∫–ª—é—á–µ–π –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–∞–π—Ç–æ–≤
  ///
  /// –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–µ–π –∏–∑ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
  static LicensifyKeyPair keysFromBytes({
    required List<int> privateKeyBytes,
    required List<int> publicKeyBytes,
  }) {
    return LicensifyKeyPair.ed25519(
      privateKeyBytes: Uint8List.fromList(privateKeyBytes),
      publicKeyBytes: Uint8List.fromList(publicKeyBytes),
    );
  }

  /// –°–æ–∑–¥–∞–µ—Ç –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–∞–π—Ç–æ–≤
  static LicensifySymmetricKey encryptionKeyFromBytes(List<int> keyBytes) {
    return LicensifySymmetricKey.xchacha20(Uint8List.fromList(keyBytes));
  }

  // ========================================
  // üìù –°–û–ó–î–ê–ù–ò–ï –õ–ò–¶–ï–ù–ó–ò–ô
  // ========================================

  /// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–æ–π –∫–ª—é—á–µ–π
  ///
  /// üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥: –∫–ª—é—á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω—É–ª—è—é—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
  ///
  /// –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–π. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç
  /// PASETO v4.public —Ç–æ–∫–µ–Ω —Å —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–¥–ø–∏—Å—å—é.
  ///
  /// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  /// - [privateKey] - –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ (–∏–∑ [generateSigningKeys])
  /// - [appId] - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  /// - [expirationDate] - –¥–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏
  /// - [type] - —Ç–∏–ø –ª–∏—Ü–µ–Ω–∑–∏–∏ (standard, pro, –∏–ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π)
  /// - [features] - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏
  /// - [metadata] - –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ, –∑–∞–∫–∞–∑–µ –∏ —Ç.–¥.)
  /// - [isTrial] - —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ª–∏—Ü–µ–Ω–∑–∏—è –ø—Ä–æ–±–Ω–æ–π
  /// - [footer] - –Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–æ–∫–µ–Ω–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  ///
  /// –ü—Ä–∏–º–µ—Ä:
  /// ```dart
  /// final keys = await Licensify.generateSigningKeys();
  /// try {
  ///   final license = await Licensify.createLicense(
  ///     privateKey: keys.privateKey,
  ///     appId: 'com.example.myapp',
  ///     expirationDate: DateTime.now().add(Duration(days: 365)),
  ///     type: LicenseType.pro,
  ///     features: {
  ///       'max_users': 100,
  ///       'api_access': true,
  ///       'premium_support': true,
  ///     },
  ///     metadata: {
  ///       'customer': 'Acme Corp',
  ///       'purchase_order': 'PO-12345',
  ///     },
  ///     footer: '{"key_id": "prod-key-2025", "version": "1.0"}',
  ///   );
  ///   print('–õ–∏—Ü–µ–Ω–∑–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${license.token}');
  /// } finally {
  ///   keys.dispose(); // –í–∞–∂–Ω–æ! –û—á–∏—â–∞–µ–º –∫–ª—é—á–∏
  /// }
  /// ```
  static Future<License> createLicense({
    required LicensifyPrivateKey privateKey,
    required String appId,
    required DateTime expirationDate,
    LicenseType type = LicenseType.standard,
    Map<String, dynamic> features = const {},
    Map<String, dynamic>? metadata,
    bool isTrial = false,
    String? footer,
  }) async {
    return await privateKey.executeWithKeyBytesAsync((keyBytes) async {
      final generator = _LicenseGenerator(privateKey: privateKey);
      return await generator.call(
        appId: appId,
        expirationDate: expirationDate,
        type: type,
        features: features,
        metadata: metadata,
        isTrial: isTrial,
        footer: footer,
      );
    });
  }

  // ========================================
  // ‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø –õ–ò–¶–ï–ù–ó–ò–ô
  // ========================================

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–æ–π –∫–ª—é—á–µ–π
  ///
  /// üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥: –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω—É–ª—è–µ—Ç—Å—è
  /// –≤ –ø–∞–º—è—Ç–∏ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
  ///
  /// –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ª–∏—Ü–µ–Ω–∑–∏–∏:
  /// 1. –í–∞–ª–∏–¥–∞—Ü–∏—é —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∏ PASETO
  /// 2. –ü—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
  /// 3. –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
  ///
  /// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  /// - [license] - –ª–∏—Ü–µ–Ω–∑–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  /// - [publicKey] - –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∏
  ///
  /// –ü—Ä–∏–º–µ—Ä:
  /// ```dart
  /// final publicKey = Licensify.keysFromBytes(
  ///   privateKeyBytes: privateKeyBytes,
  ///   publicKeyBytes: publicKeyBytes,
  /// ).publicKey;
  ///
  /// try {
  ///   final result = await Licensify.validateLicense(
  ///     license: license,
  ///     publicKey: publicKey,
  ///   );
  ///
  ///   if (result.isValid) {
  ///     print('–õ–∏—Ü–µ–Ω–∑–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞!');
  ///     // –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
  ///   } else {
  ///     print('–û—à–∏–±–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏: ${result.message}');
  ///     // –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø
  ///   }
  /// } finally {
  ///   publicKey.dispose(); // –û—á–∏—â–∞–µ–º –∫–ª—é—á
  /// }
  /// ```
  static Future<LicenseValidationResult> validateLicense({
    required License license,
    required LicensifyPublicKey publicKey,
  }) async {
    return await _SecureLicensifyOperations.validateLicenseSecurely(
      license: license,
      publicKey: publicKey,
    );
  }

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏—é –∏—Å–ø–æ–ª—å–∑—É—è –±–∞–π—Ç—ã –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞
  ///
  /// üõ°Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥: —Å–æ–∑–¥–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –∏–∑ –±–∞–π—Ç–æ–≤,
  /// –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ—Ç –∫–ª—é—á.
  ///
  /// –ü—Ä–∏–º–µ—Ä:
  /// ```dart
  /// final result = await Licensify.validateLicenseWithKeyBytes(
  ///   license: license,
  ///   publicKeyBytes: storedPublicKeyBytes,
  /// );
  /// ```
  static Future<LicenseValidationResult> validateLicenseWithKeyBytes({
    required License license,
    required List<int> publicKeyBytes,
  }) async {
    final publicKey =
        LicensifyPublicKey.ed25519(Uint8List.fromList(publicKeyBytes));
    try {
      return await validateLicense(license: license, publicKey: publicKey);
    } finally {
      publicKey.dispose();
    }
  }

  /// –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–∏ (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è)
  ///
  /// üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–æ–π –∫–ª—é—á–µ–π.
  ///
  /// –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–ª–∏ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
  /// —Ç–æ–ª—å–∫–æ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞.
  static Future<LicenseValidationResult> validateSignature({
    required License license,
    required LicensifyPublicKey publicKey,
  }) async {
    final validator = _LicenseValidator(publicKey: publicKey);
    return await validator.validateSignature(license);
  }

  // ========================================
  // üîí –®–ò–§–†–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–•
  // ========================================

  /// –®–∏—Ñ—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–º –∫–ª—é—á–æ–º
  ///
  /// üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥: –∫–ª—é—á –ù–ï –æ—á–∏—â–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏,
  /// —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω —Å–∞–º –≤—ã–∑–≤–∞—Ç—å dispose() –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
  ///
  /// –°–æ–∑–¥–∞–µ—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π PASETO v4.local —Ç–æ–∫–µ–Ω –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π
  /// –ø–µ—Ä–µ–¥–∞—á–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
  ///
  /// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  /// - [data] - –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è (JSON-—Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã–µ)
  /// - [encryptionKey] - —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–π –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
  /// - [footer] - –Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  ///
  /// –ü—Ä–∏–º–µ—Ä:
  /// ```dart
  /// final encryptionKey = Licensify.generateEncryptionKey();
  /// try {
  ///   final encryptedToken = await Licensify.encryptData(
  ///     data: {
  ///       'user_id': 'user123',
  ///       'secret_key': 'sk-1234567890abcdef',
  ///       'permissions': ['read', 'write', 'admin'],
  ///     },
  ///     encryptionKey: encryptionKey,
  ///     footer: 'metadata:version=1.0',
  ///   );
  ///
  ///   // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –∫–ª—é—á –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
  ///   final decryptedData = await Licensify.decryptData(
  ///     encryptedToken: encryptedToken,
  ///     encryptionKey: encryptionKey,
  ///   );
  ///
  ///   print('–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω: $encryptedToken');
  /// } finally {
  ///   encryptionKey.dispose(); // –û—á–∏—â–∞–µ–º –∫–ª—é—á –≤—Ä—É—á–Ω—É—é
  /// }
  /// ```
  static Future<String> encryptData({
    required Map<String, dynamic> data,
    required LicensifySymmetricKey encryptionKey,
    String? footer,
    String? implicitAssertion,
  }) async {
    final crypto = _LicensifySymmetricCrypto(symmetricKey: encryptionKey);
    return await crypto.encrypt(
      data,
      footer: footer,
      implicitAssertion: implicitAssertion,
    );
  }

  /// –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–º –∫–ª—é—á–æ–º
  ///
  /// üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥: –∫–ª—é—á –ù–ï –æ—á–∏—â–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏,
  /// —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω —Å–∞–º –≤—ã–∑–≤–∞—Ç—å dispose() –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
  ///
  /// –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç PASETO v4.local —Ç–æ–∫–µ–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
  ///
  /// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  /// - [encryptedToken] - –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π PASETO —Ç–æ–∫–µ–Ω
  /// - [encryptionKey] - —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
  ///
  /// –ü—Ä–∏–º–µ—Ä:
  /// ```dart
  /// final encryptionKey = Licensify.encryptionKeyFromBytes(keyBytes);
  /// try {
  ///   final decryptedData = await Licensify.decryptData(
  ///     encryptedToken: encryptedToken,
  ///     encryptionKey: encryptionKey,
  ///   );
  ///
  ///   print('–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: $decryptedData');
  ///   print('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${decryptedData['user_id']}');
  /// } finally {
  ///   encryptionKey.dispose(); // –û—á–∏—â–∞–µ–º –∫–ª—é—á –≤—Ä—É—á–Ω—É—é
  /// }
  /// ```
  static Future<Map<String, dynamic>> decryptData({
    required String encryptedToken,
    required LicensifySymmetricKey encryptionKey,
    String? implicitAssertion,
  }) async {
    final crypto = _LicensifySymmetricCrypto(symmetricKey: encryptionKey);
    return await crypto.decrypt(
      encryptedToken,
      implicitAssertion: implicitAssertion,
    );
  }

  // ========================================
  // üõ†Ô∏è –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
  // ========================================

  /// –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
  static const String version = '3.0.0';

  /// –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–µ—Ä—Å–∏—è—Ö PASETO
  static const List<String> supportedPasetoVersions = ['v4.public', 'v4.local'];
}
